//////////////////////
/*CALLBACK FUNCTIONS*/

//-----DOORS
void StartDoorInteract(string asEntity)
{
	AddMessageTrans("level01_02_entrance", "startdoorInteract");
}

//-----VENTILATION
void VentComb01(string asItem, string asEntity)
{
	//Go to ventilation corridor01 and crouch
	SetGlobalVar("corridor01vent_crouch", 1);
	ChangeMap(	"level01_vent01_02_03_05_08.dae", //New map
			"ventlink01", //Positon on new map
			"door_ventilation_start","door_ventilation_stop", //Stop and end sound.
			0.5f , 0.5f);//Fade out and in time (seconds).
}
//----TUTORIAL INTERACTION
void TutorialInteract01(string asParent, string asChild)
{
	AddMessageTrans("Tutorials", "Interaction01");
	
	SetPlayerActive(false);
	SetWideScreenActive(true);
	
	SetMessagesOverCallback("TutEnd");
	
	RemoveEntityCollideCallback("Enter","Player","tutinteract");
}
void TutEnd()
{
	SetPlayerActive(true);
	SetWideScreenActive(false);
}

//----LOCKED LOCKER

void BreakLockerLock(string asTimer)
{
	SetGameEntityActive("lockopen1",true);
	AddBodyForce("lockopen1", "World", 1, 1, 1);
			
	KillParticleSystem("acidparticle");
	SetGameEntityActive("lock1",false);
	SetGameEntityActive("blocklocker",false);
	
	RemoveNotebookTask("TaskLocker");
	RemoveNotebookTask("TaskCombinedBottle");
	
	SetPlayerActive(true);
	SetWideScreenActive(false);
	StopPlayerLookAt();
	
	SetGameEntityDescriptionTrans("lockedlocker", "level01_02_entrance", "LockedLocker02");
}

void lockedlocker01(string asItem, string asEntity)
{
	PlaySoundEntity("acidlock",false);
	SetParticleSystemActive("acidparticle", true);
	
	CreateTimer("BreakLock", 7.1f, "BreakLockerLock",false);
	SetPlayerActive(false);
	SetWideScreenActive(true);
	StartPlayerLookAt("lock1",1.5f, 4);
	
	RemoveItem("jaracid");
}
void Examinelockedlocker01(string asEntity)
{
	AddNotebookTask("TaskLocker", "Tasks","LockedLocker");
	
	SetMessagesOverCallback("LockedEnd");
	
	RemoveEntityCallback("PlayerExamine","lockedlocker");
}
void LockedEnd()
{
	AddMessageTrans("Tutorials", "PersonalNotes");
}

//----PICKING UP GLOWSTICK
void PickUpGlowstick(string asEntity)
{
	AddMessageTrans("Tutorials", "GlowStickTutorial");
}

//----ID CARD & LOCKED DOOR
void PickUpIDCard01(string asEntity)
{
	AddMessageTrans("Items", "IDCard01Desc");
}
void Door1Interact01(string asEntity)
{
	if(GetLocalVar("lockedoor") == 0)
		{
		StartNumericalPanel("test",1,9,9,3,10.0f,"PanelCode");
		}
	else if(GetLocalVar("lockedoor") == 1)
		{
		ChangeMap(	"level01_03_corridor01.dae", //New map
				"link01", //Positon on new map
				"door_clickable_start","door_clickable_stop", //Stop and end sound.
				0.5f , 0.5f);//Fade out and in time (seconds).
		}
}
void PanelCode(string asName, bool abCodeWasCorrect)
{
	if(abCodeWasCorrect)
	{
		SetLocalVar("lockedoor", 1);
		PlayGuiSound("door_code_correct", 0.8);
		RemoveNotebookTask("TaskEntranceDoor");
	}
	else
	{
		PlayGuiSound("door_code_incorrect", 0.8);
	}
		
}
void Door1Examine01(string asEntity)
{
	AddNotebookTask("TaskEntranceDoor", "Tasks","EntranceDoor");
	
	RemoveEntityCallback("PlayerExamine","door01area");
}

//----PICKING UP NOTE-------------
void PickUpNote01(string asEntity)
{
	AddMessageTrans("Items", "NoteEntrance01Tutorial");
}
//////////////////////////////////////////////////////////
/*This function is run the FIRST time the map is loaded */
void OnStart()
{			
//----SET UP LINKS-----------------------
	/*SetupLink(	"link01", //Link name
			"level01_01_tunnel.dae", //New map
			"link02", //Positon on new map
			"","", //Stop and end sound.
			0.5f , 0.5f);//Fade out and in time (seconds).*/
//----LIGHT INIT----------------------
	SetLight3DVisible("light3_light1",false);

//----SOUND INIT------------------------------
	StopSoundEntity("light3_light1s", false);
	//stops sound for locked locker puzzle
	StopSoundEntity("acidlock",false);
						
//----TEXT INIT----------------------
	//ventilation
	SetGameEntityDescriptionTrans("vent1", "Doors", "Ventilation02");
	//doors
	SetGameEntityDescriptionTrans("door01area", "Doors", "DoorClickable01");
	SetGameEntityDescriptionTrans("startdoor","level01_02_entrance", "startdoorDesc");
	//lights
	for(int i=1;i<=2;i++)
		SetGameEntityDescriptionTrans("emerlarea"+i, "Lights", "EmergencyLights");
	//lockers
	for(int i=1;i<=6;i++)
		SetGameEntityDescriptionTrans("locker"+i, "level01_02_entrance", "Lockers");
	SetGameEntityDescriptionTrans("lockedlocker", "level01_02_entrance", "LockedLocker");
	//pipes
	SetGameEntityDescriptionTrans("pipesarea1", "level01_02_entrance", "Pipes1");
	
//----AREA INIT------------------------
	AddEntityCollideCallback("Enter","Player","tutinteract","TutorialInteract01");
	
//----INTERACT---------------------
	//Ventilation
	AddUseCallback("venttool", "vent1", "VentComb01");
	SetGameEntityMaxInteractDist("vent1",1);
	SetAreaCustomIcon("vent1", "DoorLink");
	//Door
	AddEntityCallback("PlayerInteract","door01area","Door1Interact01");
	SetAreaCustomIcon("door01area", "DoorLink");
	AddEntityCallback("PlayerExamine","door01area","Door1Examine01");
	AddEntityCallback("PlayerInteract","startdoor","StartDoorInteract");
	SetAreaCustomIcon("startdoor", "DoorLink");
	//Locked locker
	AddUseCallback("jaracid", "lockedlocker","lockedlocker01");
	AddEntityCallback("PlayerExamine","lockedlocker","Examinelockedlocker01");
	//need to crouch..
	SetGameEntityMaxInteractDist("pain",1.2);
	SetGameEntityMaxInteractDist("dynamite1",1.2);
	
//----PICK UP ITEMS------------------------
	//message when picking ID Card 1 required to open door1
	AddPickupCallback("idcard1", "PickUpIDCard01");
	AddPickupCallback("NoteEntrance01", "PickUpNote01");
	AddPickupCallback("glowst1", "PickUpGlowstick");

//----ENTITY INIT-------------------------------
	SetGameEntityActive("lockopen1",false);
	
	AddBodyImpulse("locker6_lockerdoorShape", "local" ,0,0,0.05);
	AddBodyImpulse("locker3_lockerdoorShape", "local" ,0,0,0.08);

//----VARIABLES ------------------
	//lockeddoor
	CreateLocalVar("lockedoor", 0);	
	
//----PARTICLE INIT--------------------------
	SetParticleSystemActive("acidparticle",false);
	
	
	//Some music:
	//PlayMusic("music_mystery01.mp3",0.6,0.2,true);
}	


/////////////////////////////////////////////////////
/*This function is run everytime the map is loaded */
void OnLoad()
{
//----VENTILATION---------------
	//Make sure player Stand when exciting ventiation
	if(GetGlobalVar("corridor01vent_crouch") == 0) SetPlayerPose("Stand");
		SetGlobalVar("corridor01vent_crouch", 2);

///////////////////////
////START AUTO SAVE////

	if(GetGlobalVar("autoload") == 0)
	{
		//Skip autosave for first map.
		//AutoSave();
		SetGlobalVar("autoload", 1);
	}

////STOP AUTO SAVE////	
//////////////////////
}


///////////////////////////////////////
/*This function is run 60 times a sec*/
void OnUpdate()
{	
	
}